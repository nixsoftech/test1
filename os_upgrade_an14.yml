---
- name: Upgrade Ubuntu with i386 preservation
  hosts: all
  become: yes
  vars:
    repo_url: "http://10.13.0.88:8080/ubuntu"
    reboot_timeout: 1800  # 30 minutes
    upgrade_timeout: 7200 # 2 hours

  tasks:
    # ========== INITIAL SETUP ==========
    - name: Gather facts
      ansible.builtin.setup:

    - name: Check if reboot is needed
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Initial reboot if required
      ansible.builtin.reboot:
        reboot_timeout: "{{ reboot_timeout }}"
      when: reboot_required.stat.exists

    # ========== i386 PACKAGE PRESERVATION ==========
    - name: Pin existing i386 packages
      ansible.builtin.copy:
        content: |
          Package: *:i386
          Pin: version *
          Pin-Priority: 1001
        dest: /etc/apt/preferences.d/99hold-i386
        mode: '0644'

    - name: Restrict new i386 installs
      ansible.builtin.copy:
        content: |
          APT::Never-Install ".*:i386";
          APT::Get::Allow-Install-Suggests "false";
        dest: /etc/apt/apt.conf.d/99no-new-i386
        mode: '0644'

    # ========== UPGRADE PREPARATION ==========
    - name: Configure dpkg options
      ansible.builtin.copy:
        content: |
          Dpkg::Options {
             "--force-confdef";
             "--force-confold";
          }
        dest: /etc/apt/apt.conf.d/99dpkg-options
        mode: '0644'

    - name: Kill problematic processes
      ansible.builtin.shell: |
        pkill -9 apt || true
        pkill -9 dpkg || true
      ignore_errors: yes

    # ========== RELEASE UPGRADE HANDLING ==========
    - block:
        - name: Configure sources for 20.04
          ansible.builtin.copy:
            content: |
              deb [arch=amd64] {{ repo_url }} focal main universe
              deb [arch=amd64] {{ repo_url }} focal-updates main universe
              deb [arch=amd64] {{ repo_url }} focal-security main universe
            dest: /etc/apt/sources.list

        - name: Run release upgrade (18.04→20.04)
          ansible.builtin.shell: |
            set -o pipefail
            printf '\n\ny\n\ny\n' | \
            do-release-upgrade -y \
              -f DistUpgradeViewNonInteractive \
              --allow-downgrades \
              --allow-change-held-packages
          args:
            executable: /bin/bash
          environment:
            DEBIAN_FRONTEND: noninteractive
            UCF_FORCE_CONFFNEW: 1
          async: "{{ upgrade_timeout }}"
          poll: 0
          register: upgrade_result
          changed_when: "'System upgrade is complete' in upgrade_result.stdout"

        - name: Reboot after upgrade
          ansible.builtin.reboot:
            reboot_timeout: "{{ reboot_timeout }}"

      when: ansible_distribution_version == "18.04"

    - block:
        - name: Configure sources for 22.04
          ansible.builtin.copy:
            content: |
              deb [arch=amd64] {{ repo_url }} jammy main universe
              deb [arch=amd64] {{ repo_url }} jammy-updates main universe
              deb [arch=amd64] {{ repo_url }} jammy-security main universe
            dest: /etc/apt/sources.list

        - name: Run release upgrade (20.04→22.04)
          ansible.builtin.shell: |
            set -o pipefail
            printf '\n\ny\n\ny\n' | \
            do-release-upgrade -y \
              -f DistUpgradeViewNonInteractive \
              --allow-downgrades \
              --allow-change-held-packages
          args:
            executable: /bin/bash
          environment:
            DEBIAN_FRONTEND: noninteractive
            UCF_FORCE_CONFFNEW: 1
          async: "{{ upgrade_timeout }}"
          poll: 0
          register: upgrade_result
          changed_when: "'System upgrade is complete' in upgrade_result.stdout"

        - name: Reboot after upgrade
          ansible.builtin.reboot:
            reboot_timeout: "{{ reboot_timeout }}"

      when: ansible_distribution_version == "20.04"

    # ========== POST-UPGRADE CHECKS ==========
    - name: Verify i386 package status
      ansible.builtin.command: |
        dpkg -l | grep ':i386' | awk '{print $2 "=" $3}'
      register: i386_packages
      changed_when: false

    - name: Show preserved i386 packages
      ansible.builtin.debug:
        msg: "Preserved i386 packages: {{ i386_packages.stdout_lines }}"
